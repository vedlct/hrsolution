{"remainingRequest":"C:\\xampp\\htdocs\\angular\\hrsolution\\frontend\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\xampp\\htdocs\\angular\\hrsolution\\frontend\\node_modules\\angular-datatables\\src\\angular-datatables.directive.js","dependencies":[{"path":"C:\\xampp\\htdocs\\angular\\hrsolution\\frontend\\node_modules\\angular-datatables\\src\\angular-datatables.directive.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\angular\\hrsolution\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1530250578555},{"path":"C:\\xampp\\htdocs\\angular\\hrsolution\\frontend\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["/**\n * @license\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\n */\nimport { Directive, ElementRef, Input } from '@angular/core';\nvar DataTableDirective = /** @class */ /*@__PURE__*/ (function () {\n    function DataTableDirective(el) {\n        this.el = el;\n        /**\n           * The DataTable option you pass to configure your table.\n           */\n        this.dtOptions = {};\n    }\n    DataTableDirective.prototype.ngOnInit = function () {\n        var _this = this;\n        if (this.dtTrigger) {\n            this.dtTrigger.subscribe(function () {\n                _this.displayTable();\n            });\n        }\n        else {\n            this.displayTable();\n        }\n    };\n    DataTableDirective.prototype.ngOnDestroy = function () {\n        if (this.dtTrigger) {\n            this.dtTrigger.unsubscribe();\n        }\n        if (this.dt) {\n            this.dt.destroy(true);\n        }\n    };\n    DataTableDirective.prototype.displayTable = function () {\n        var _this = this;\n        this.dtInstance = new Promise(function (resolve, reject) {\n            Promise.resolve(_this.dtOptions).then(function (dtOptions) {\n                // Using setTimeout as a \"hack\" to be \"part\" of NgZone\n                setTimeout(function () {\n                    _this.dt = $(_this.el.nativeElement).DataTable(dtOptions);\n                    resolve(_this.dt);\n                });\n            });\n        });\n    };\n    return DataTableDirective;\n}());\nexport { DataTableDirective };\n//# sourceMappingURL=angular-datatables.directive.js.map\n",null]}